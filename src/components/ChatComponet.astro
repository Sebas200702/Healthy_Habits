---
import type { Sesion, Message } from '../types/types';
import ChatInput from './ChatInput.astro';
import Modal from './Modal.astro';
import ChatBoubble from './ChatBoubble.astro';
import Scroll from './Scroll.tsx';

interface Props {
    sesion: Sesion;
    messages: Message[];
}
const { sesion, messages } = Astro.props;
---

<div id="output" class="[grid-area:output] items-center overflow-y-auto h-full md:max-h-full max-h-[550px] [&::-webkit-scrollbar]:w-2 [&::-webkit-scrollbar-track]:rounded-full [&::-webkit-scrollbar-track]:bg-gray-100  [&::-webkit-scrollbar-thumb]:rounded-full [&::-webkit-scrollbar-thumb]:bg-gray-300 scroll-smooth p-4 relative" >
    {
        sesion ? (
            <>
                <Modal message='borrar el historial' confirm='borrar'/>
                <ul id="messages" class="flex flex-col md:max-w-[850px] max-w-[270px] mx-auto max-h-[650px] h-full p-4 gap-4 rounded-xl w-full">
                    {
                        messages.map(message => {
                            return <ChatBoubble message={message} img={message.role === 'You' ? sesion?.user?.image : 'https://flowbite.com/docs/images/people/profile-picture-4.jpg'} alt={message.role === 'You' ? sesion?.user?.name : 'Amelia'} sender={message.role} name={message.role === 'You' ? sesion?.user?.name : 'Amelia'}/>
                        })
                    }
                </ul>
                <div class="sticky bottom-2 w-full flex justify-center items-center">
                    <Scroll client:load/>
                </div>
            </>
        ) : (
            <div class="flex flex-col items-center justify-center p-4 h-full w-full">
                <h1 class="text-zinc-500 dark:text-zinc-400 mb-8 w-full text-center text-2xl font-semibold">
                    Inicia sesi√≥n con Google para comenzar a chatear
                </h1>
            </div>
        )
    }
</div>
<div class="[grid-area:input] p-4">
    <ChatInput />
</div>
